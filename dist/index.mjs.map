{"version":3,"sources":["../src/button/index.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, FC } from \"react\";\r\nimport { styled, setup } from \"goober\";\r\n\r\nexport interface ButtonProps {\r\n  text?: string;\r\n  loading?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport interface Button3Props {\r\n  text?: string;\r\n  className?: string;\r\n}\r\n\r\nsetup(React.createElement);\r\n\r\nconst StyledPrimary = styled(\"button\")`\r\n  background-color: \"#fff\";\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  color: #000;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 8px 16px;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    background-color: #000;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst StyledLoading = styled(\"button\")`\r\n  background-color: \"#fff\";\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  color: #000;\r\n  cursor: not-allowed;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  padding: 8px 16px;\r\n  transition: all 0.3s ease-in-out;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n`;\r\n\r\nexport const PrimaryButton: FC<\r\n  ButtonProps & ButtonHTMLAttributes<HTMLButtonElement>\r\n> = ({ text, loading = false, className = \"\", ...props }) => {\r\n\r\n  if (!loading) {\r\n    return (\r\n      <StyledPrimary className={className} {...props}>\r\n        {text}\r\n      </StyledPrimary>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledLoading className={className} {...props}>\r\n      {text}\r\n    </StyledLoading>\r\n  );\r\n};\r\n\r\nconst StyleBtn3 = styled(\"button\")`\r\n  align-items: center;\r\n  appearance: none;\r\n  background-image: radial-gradient(\r\n    100% 100% at 100% 0,\r\n    #5adaff 0,\r\n    #5468ff 100%\r\n  );\r\n  border: 0;\r\n  border-radius: 6px;\r\n  box-shadow: rgba(45, 35, 66, 0.4) 0 2px 4px,\r\n    rgba(45, 35, 66, 0.3) 0 7px 13px -3px, rgba(58, 65, 111, 0.5) 0 -3px 0 inset;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-family: \"JetBrains Mono\", monospace;\r\n  height: 48px;\r\n  justify-content: center;\r\n  line-height: 1;\r\n  list-style: none;\r\n  overflow: hidden;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  position: relative;\r\n  text-align: left;\r\n  text-decoration: none;\r\n  transition: box-shadow 0.15s, transform 0.15s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  white-space: nowrap;\r\n  will-change: box-shadow, transform;\r\n  font-size: 18px;\r\n\r\n  &:focus {\r\n    box-shadow: #3c4fe0 0 0 0 1.5px inset, rgba(45, 35, 66, 0.4) 0 2px 4px,\r\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\r\n  }\r\n  &:hover {\r\n    box-shadow: rgba(45, 35, 66, 0.4) 0 4px 8px,\r\n      rgba(45, 35, 66, 0.3) 0 7px 13px -3px, #3c4fe0 0 -3px 0 inset;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    box-shadow: #3c4fe0 0 3px 7px inset;\r\n    transform: translateY(2px);\r\n  }\r\n`;\r\n\r\nexport const Button3: FC<\r\n  Button3Props & ButtonHTMLAttributes<HTMLButtonElement>\r\n> = ({ text, className = \"\", ...props }) => {\r\n  return (\r\n    <StyleBtn3 className={className} {...props}>\r\n      {text}\r\n    </StyleBtn3>\r\n  );\r\n};\r\n\r\nconst StyleBtn4 = styled(\"button\")`\r\n  cursor: pointer;\r\n  &,\r\n  &:after {\r\n    width: 150px;\r\n    height: 76px;\r\n    line-height: 78px;\r\n    font-size: 20px;\r\n    font-family: \"Bebas Neue\", sans-serif;\r\n    background: linear-gradient(45deg, transparent 5%, #ff013c 5%);\r\n    border: 0;\r\n    color: #fff;\r\n    letter-spacing: 3px;\r\n    box-shadow: 6px 0px 0px #00e6f6;\r\n    outline: transparent;\r\n    position: relative;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n    touch-action: manipulation;\r\n  }\r\n\r\n  &:after {\r\n    --slice-0: inset(50% 50% 50% 50%);\r\n    --slice-1: inset(80% -6px 0 0);\r\n    --slice-2: inset(50% -6px 30% 0);\r\n    --slice-3: inset(10% -6px 85% 0);\r\n    --slice-4: inset(40% -6px 43% 0);\r\n    --slice-5: inset(80% -6px 5% 0);\r\n\r\n    content: \"ALTERNATE TEXT\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: linear-gradient(\r\n      45deg,\r\n      transparent 3%,\r\n      #00e6f6 3%,\r\n      #00e6f6 5%,\r\n      #ff013c 5%\r\n    );\r\n    text-shadow: -3px -3px 0px #f8f005, 3px 3px 0px #00e6f6;\r\n    clip-path: var(--slice-0);\r\n  }\r\n\r\n  &:hover:after {\r\n    animation: 1s glitch;\r\n    animation-timing-function: steps(2, end);\r\n  }\r\n\r\n  @keyframes glitch {\r\n    0% {\r\n      clip-path: var(--slice-1);\r\n      transform: translate(-20px, -10px);\r\n    }\r\n    10% {\r\n      clip-path: var(--slice-3);\r\n      transform: translate(10px, 10px);\r\n    }\r\n    20% {\r\n      clip-path: var(--slice-1);\r\n      transform: translate(-10px, 10px);\r\n    }\r\n    30% {\r\n      clip-path: var(--slice-3);\r\n      transform: translate(0px, 5px);\r\n    }\r\n    40% {\r\n      clip-path: var(--slice-2);\r\n      transform: translate(-5px, 0px);\r\n    }\r\n    50% {\r\n      clip-path: var(--slice-3);\r\n      transform: translate(5px, 0px);\r\n    }\r\n    60% {\r\n      clip-path: var(--slice-4);\r\n      transform: translate(5px, 10px);\r\n    }\r\n    70% {\r\n      clip-path: var(--slice-2);\r\n      transform: translate(-10px, 10px);\r\n    }\r\n    80% {\r\n      clip-path: var(--slice-5);\r\n      transform: translate(20px, -10px);\r\n    }\r\n    90% {\r\n      clip-path: var(--slice-1);\r\n      transform: translate(-10px, 0px);\r\n    }\r\n    100% {\r\n      clip-path: var(--slice-1);\r\n      transform: translate(0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button4: FC<\r\n  Button3Props & ButtonHTMLAttributes<HTMLButtonElement>\r\n> = ({ text, className = \"\", ...props }) => {\r\n  return (\r\n    <StyleBtn4 className={className} {...props}>\r\n      {text}\r\n    </StyleBtn4>\r\n  );\r\n};\r\n"],"mappings":";2fAAA,OAAOA,MAAyC,QAChD,OAAS,UAAAC,EAAQ,SAAAC,MAAa,SAa9BC,EAAMC,EAAM,aAAa,EAEzB,IAAMC,EAAgBC,EAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgB/BC,EAAgBD,EAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBxBE,EAERC,GAAwD,CAAxD,IAAAC,EAAAD,EAAE,MAAAE,EAAM,QAAAC,EAAU,GAAO,UAAAC,EAAY,EAlD1C,EAkDKH,EAA4CI,EAAAC,EAA5CL,EAA4C,CAA1C,OAAM,UAAiB,cAE5B,OAAKE,EASHR,EAAA,cAACG,EAAAS,EAAA,CAAc,UAAWH,GAAeC,GACtCH,CACH,EATEP,EAAA,cAACC,EAAAW,EAAA,CAAc,UAAWH,GAAeC,GACtCH,CACH,CASN,EAEMM,EAAYX,EAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmDpBY,EAERT,GAAuC,CAAvC,IAAAC,EAAAD,EAAE,MAAAE,EAAM,UAAAE,EAAY,EAxHzB,EAwHKH,EAA2BI,EAAAC,EAA3BL,EAA2B,CAAzB,OAAM,cACX,OACEN,EAAA,cAACa,EAAAD,EAAA,CAAU,UAAWH,GAAeC,GAClCH,CACH,CAEJ,EAEMQ,EAAYb,EAAO,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoGpBc,EAERX,GAAuC,CAAvC,IAAAC,EAAAD,EAAE,MAAAE,EAAM,UAAAE,EAAY,EAtOzB,EAsOKH,EAA2BI,EAAAC,EAA3BL,EAA2B,CAAzB,OAAM,cACX,OACEN,EAAA,cAACe,EAAAH,EAAA,CAAU,UAAWH,GAAeC,GAClCH,CACH,CAEJ","names":["React","styled","setup","setup","React","StyledPrimary","styled","StyledLoading","PrimaryButton","_a","_b","text","loading","className","props","__objRest","__spreadValues","StyleBtn3","Button3","StyleBtn4","Button4"]}